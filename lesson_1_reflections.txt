It is easier to find a bug when I compare the two files.
This method of doing comparison has really opened my view



How could having easy access to the entire history of a file make you a 
more efficient programmer in the long term?

With my personal experience, I hav noticed that I have changed 
my prgram different times during the process of achieving results, 
but becuase of not saving the prvious versions, I couldn't track my progress.


What do you think are the pros and cons of manually choosing when to 
create a commit, like you do in Git, vs having versions automatically saved,
 like Google docs does?

When you manually choose when to commit, you can save it everytime that your
code has a meaning but autosaving is not so



Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

I think that when you change one thing in a main file, the same things must be changed in other files as well. So, in this case it is good to treat files together


How can you use the commands git log and git diff to view the history of files?

It is quite easy, you can easily enter the git log command and then after finding
the needed commit, you can compare it to the previous one :)

How might using version control make you more confident to make changes that could break something?

When you know that your previous versions have been saved, you find more confidence in 
changing the code without being worroed about losing track of changes

Now that you have your workspace set up, what do you want to try using Git for?

I want it for managing my own projects
